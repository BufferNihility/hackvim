set nocompatible
filetype off
" set the runtime path to include Vundle and initialize
set rtp+=~/.vim/bundle/Vundle.vim
call vundle#begin()

" let Vundle manage Vundle, required
Bundle 'gmarik/Vundle.vim'

"""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""
" => Syntax checker
"""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""
" Auto complete quotes/single quotes
Bundle 'Raimondi/delimitMate'
" Auto close html tags
Bundle 'docunext/closetag.vim'
let g:closetag_html_style=1

" Insert surounded pairs quickly
Bundle 'tpope/vim-surround'

Bundle 'ervandew/supertab'

"""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""
" => Beautiful code style
"""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""
Bundle 'bronson/vim-trailing-whitespace'
map <leader><space> :FixWhitespace<cr>

Bundle 'nathanaelkane/vim-indent-guides'
let g:indent_guides_auto_colors = 1
autocmd VimEnter,Colorscheme * :hi IndentGuidesOdd  guibg=red   ctermbg=3
autocmd VimEnter,Colorscheme * :hi IndentGuidesEven guibg=green ctermbg=4
hi IndentGuidesOdd  guibg=red   ctermbg=3
hi IndentGuidesEven guibg=green ctermbg=4
hi IndentGuidesOdd  ctermbg=black
hi IndentGuidesEven ctermbg=darkgrey

" Bundle 'tpope/vim-commentary'
Bundle 'scrooloose/nerdcommenter'

"""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""
" => Easy movement
"""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""
Bundle 'vim-scripts/matchit.zip'
Bundle "kshenoy/vim-signature"
" m[a-zA-Z] add mark
" '[a-zA-Z] go to mark
" m<Space>  del all marks

Bundle 'terryma/vim-multiple-cursors'
let g:multi_cursor_use_default_mapping=0
" Default mapping
let g:multi_cursor_next_key='<C-m>'
let g:multi_cursor_prev_key='<C-p>'
let g:multi_cursor_skip_key='<C-x>'
let g:multi_cursor_quit_key='<Esc>'

" Open file under cursor when pressing gf (if the text under the cursor is a path)
Bundle 'amix/open_file_under_cursor.vim'
Bundle 'scrooloose/nerdtree'
" open NERDTree automatically when vim starts up if no files were specified
autocmd StdinReadPre * let s:std_in=1
autocmd VimEnter * if argc() == 0 && !exists("s:std_in") | NERDTree | endif

" close vim if the only window left is a NERDTree
autocmd bufenter * if (winnr("$") == 1 && exists("b:NERDTreeType") && b:NERDTreeType == "primary") | q | endif
let NERDTreeHighlightCursorline=1
let NERDTreeIgnore=[ '\.pyc$', '\.pyo$', '\.obj$', '\.o$', '\.so$', '\.egg$', '^\.git$', '^\.svn$', '^\.hg$' ]
let g:NERDTreeWinPos = "right"

map <Leader>nn :NERDTreeTabsToggle<CR>
map <leader>nb :NERDTreeFromBookmark
map <leader>nf :NERDTreeFind<cr>
let g:NERDTreeMapOpenSplit = 's'
let g:NERDTreeMapOpenVSplit = 'v'

Bundle 'jistr/vim-nerdtree-tabs'
map <Leader>n <plug>NERDTreeTabsToggle<CR>
let g:nerdtree_tabs_synchronize_view=1
let g:nerdtree_tabs_synchronize_focus=0

Bundle 'vim-scripts/minibufexplorerpp'

" history
Bundle 'sjl/gundo.vim'
nnoremap <leader>h :GundoToggle<CR>

"############### PHP ###############
Bundle 'shawncplus/phpcomplete.vim'
" default key mapping, needs ctags
" let g:phpcomplete_mappings = {
"   \ 'jump_to_def': '<C-]>',
"   \ 'jump_to_def_split': '<C-W><C-]>',
"   \ 'jump_to_def_vsplit': '<C-W><C-\>',
"   \}

Bundle 'vim-scripts/taglist.vim'
Bundle 'xolox/vim-easytags'
Bundle 'xolox/vim-misc'
set tags=tags;/
" let g:easytags_async = 1
let g:easytags_dynamic_files = 1
let g:easytags_auto_highlight = 0

Bundle '2072/PHP-Indenting-for-VIm'
Bundle 'xsbeats/vim-blade'

"###### HTML/JS/JQUERY/CSS #########
" for javascript
Bundle 'jelera/vim-javascript-syntax'
Bundle "pangloss/vim-javascript"
Bundle "maksimr/vim-jsbeautify"
Bundle "einars/js-beautify"
map <c-f> :call JsBeautify()<cr>
" or
autocmd FileType javascript noremap <buffer>  <c-f> :call JsBeautify()<cr>
" for html
autocmd FileType html noremap <buffer> <c-f> :call HtmlBeautify()<cr>
" for css or scss
autocmd FileType css noremap <buffer> <c-f> :call CSSBeautify()<cr>
let g:html_indent_inctags = "html,body,head,tbody"
let g:html_indent_script1 = "inc"
let g:html_indent_style1 = "inc"

"for jquery
Bundle 'nono/jquery.vim'
Bundle "mattn/emmet-vim"
Bundle 'ap/vim-css-color'
call vundle#end()
